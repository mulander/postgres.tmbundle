<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby

require ENV['TM_SUPPORT_PATH'] + '/lib/textmate'
require ENV['TM_SUPPORT_PATH'] + '/lib/exit_codes'

proj = ENV['TM_PROJECT_DIRECTORY']
file = ENV['TM_FILEPATH']

line = ENV['TM_CURRENT_LINE']
proc = ENV['TM_CURRENT_WORD']

if line.match(%r{\b([-a-z0-9_]+)\.#{proc}}i)
  pkg = $1
  file = %x{egrep -il -r "create.*package  *body  *#{pkg}\\b" "#{proj}"}.split(/\n/).last
  if file
    res = %x{egrep -in "(function|procedure)  *#{proc}" "#{file}"}.split(/\n/).last
  else
    TextMate.exit_show_tool_tip "Package #{pkg} not available"
  end
else
  res = %x{egrep -in "(function|procedure)  *#{proc}" "#{file}"}.split(/\n/).last
end

if res
  data = res.split(/:/)
  TextMate.go_to :file =&gt; file, :line =&gt; data[0], :column =&gt; 0
else
  file = file.sub(%r{#{proj}/?}, '')
  TextMate.exit_show_tool_tip "Procedure #{proc} not found in #{file}"
end
</string>
	<key>fallbackInput</key>
	<string>word</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^f</string>
	<key>name</key>
	<string>Find Procedure</string>
	<key>output</key>
	<string>showAsTooltip</string>
	<key>scope</key>
	<string>source.plsql.oracle</string>
	<key>uuid</key>
	<string>1222BE8A-15D8-4C06-8965-F139A153DD97</string>
</dict>
</plist>
